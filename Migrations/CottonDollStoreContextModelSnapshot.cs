// <auto-generated />
using System;
using DbCottonDollStore.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DbCottonDollStore.Migrations
{
    [DbContext(typeof(CottonDollStoreContext))]
    partial class CottonDollStoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DbCottonDollStore.Models.Banner", b =>
                {
                    b.Property<int>("BID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BID"));

                    b.Property<string>("BannerImg")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("char(30)")
                        .IsFixedLength();

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Information")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("char(200)")
                        .IsFixedLength();

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.HasKey("BID")
                        .HasName("PK_Banner");

                    b.ToTable("Banner");
                });

            modelBuilder.Entity("DbCottonDollStore.Models.Category", b =>
                {
                    b.Property<string>("CategoryID")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .IsFixedLength();

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ParentCategory")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .IsFixedLength();

                    b.HasKey("CategoryID")
                        .HasName("PK__Category__19093A2B841B10F7");

                    b.HasIndex("ParentCategory");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("DbCottonDollStore.Models.Order", b =>
                {
                    b.Property<string>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(14)
                        .IsUnicode(false)
                        .HasColumnType("char(14)")
                        .HasDefaultValueSql("EXEC getOrderID")
                        .IsFixedLength();

                    b.Property<string>("ConNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("char(20)")
                        .IsFixedLength();

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Logistics")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Payment")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("PickupDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("PreDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ShipDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Statu")
                        .HasColumnType("bit");

                    b.Property<string>("StoreID")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .IsFixedLength();

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("char(12)")
                        .IsFixedLength();

                    b.HasKey("OrderID")
                        .HasName("PK__Order__C3905BAF352A2270");

                    b.HasIndex("StoreID");

                    b.HasIndex("UserID");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("DbCottonDollStore.Models.OrderDetail", b =>
                {
                    b.Property<string>("OrderID")
                        .HasMaxLength(14)
                        .IsUnicode(false)
                        .HasColumnType("char(14)")
                        .IsFixedLength();

                    b.Property<string>("ProSpecID")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .IsFixedLength();

                    b.Property<string>("ProID")
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("char(9)")
                        .IsFixedLength();

                    b.Property<string>("BuyerReview")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("SellerRespond")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("Star")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<string>("StoreID")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .IsFixedLength();

                    b.HasKey("OrderID", "ProSpecID", "ProID")
                        .HasName("PK__OrderDet__473213D7FDDD3F54");

                    b.HasIndex("ProID");

                    b.HasIndex("StoreID");

                    b.HasIndex("ProSpecID", "ProID", "StoreID");

                    b.ToTable("OrderDetail", t =>
                        {
                            t.HasTrigger("checkProductOrderQty");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("DbCottonDollStore.Models.Product", b =>
                {
                    b.Property<string>("ProID")
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("char(9)")
                        .IsFixedLength();

                    b.Property<string>("CategoryID")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .IsFixedLength();

                    b.Property<string>("CategoryID_2")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .IsFixedLength();

                    b.Property<string>("CategoryID_3")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .IsFixedLength();

                    b.Property<int?>("Clicks")
                        .HasColumnType("int");

                    b.Property<string>("Information")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ProImg")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool?>("Statu")
                        .HasColumnType("bit");

                    b.Property<string>("StoreID")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .IsFixedLength();

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("ProID")
                        .HasName("PK__Product__620295F09BB96820");

                    b.HasIndex("CategoryID");

                    b.HasIndex("CategoryID_2");

                    b.HasIndex("CategoryID_3");

                    b.HasIndex("StoreID");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("DbCottonDollStore.Models.ProductSpec", b =>
                {
                    b.Property<string>("ProSpecID")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .IsFixedLength();

                    b.Property<string>("ProID")
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("char(9)")
                        .IsFixedLength();

                    b.Property<string>("StoreID")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .IsFixedLength();

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(6, 0)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Spec")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("SpecImg")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ProSpecID", "ProID", "StoreID")
                        .HasName("PK__ProductS__5C04AED6164834B6");

                    b.HasIndex("ProID");

                    b.HasIndex("StoreID");

                    b.ToTable("ProductSpec");
                });

            modelBuilder.Entity("DbCottonDollStore.Models.Rank", b =>
                {
                    b.Property<string>("RankID")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<string>("RankName")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("RankID")
                        .HasName("PK__Rank__B37AFB960001A619");

                    b.ToTable("Rank");
                });

            modelBuilder.Entity("DbCottonDollStore.Models.Store", b =>
                {
                    b.Property<string>("StoreID")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .IsFixedLength();

                    b.Property<string>("StoreInformation")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("StoreName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("UserID")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("char(12)")
                        .IsFixedLength();

                    b.HasKey("StoreID")
                        .HasName("PK__Store__3B82F0E1AAA21DE9");

                    b.HasIndex("UserID");

                    b.ToTable("Store");
                });

            modelBuilder.Entity("DbCottonDollStore.Models.User", b =>
                {
                    b.Property<string>("UserID")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("char(12)")
                        .IsFixedLength();

                    b.Property<string>("Account")
                        .HasMaxLength(14)
                        .IsUnicode(false)
                        .HasColumnType("char(14)")
                        .IsFixedLength();

                    b.Property<DateOnly>("Birthday")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("RankID")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<DateTime>("RegDate")
                        .HasColumnType("datetime");

                    b.Property<string>("StoreID")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .IsFixedLength();

                    b.Property<string>("UserImg")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserPhone")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("UserID")
                        .HasName("PK__User__1788CCACCBF52B00");

                    b.HasIndex("RankID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("DbCottonDollStore.Models.Category", b =>
                {
                    b.HasOne("DbCottonDollStore.Models.Category", "ParentCategoryNavigation")
                        .WithMany("InverseParentCategoryNavigation")
                        .HasForeignKey("ParentCategory")
                        .HasConstraintName("FK__Category__Parent__3D5E1FD2");

                    b.Navigation("ParentCategoryNavigation");
                });

            modelBuilder.Entity("DbCottonDollStore.Models.Order", b =>
                {
                    b.HasOne("DbCottonDollStore.Models.Store", "Store")
                        .WithMany("Order")
                        .HasForeignKey("StoreID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Order__StoreID__25518C17");

                    b.HasOne("DbCottonDollStore.Models.User", "User")
                        .WithMany("Order")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Order__UserID__2645B050");

                    b.Navigation("Store");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DbCottonDollStore.Models.OrderDetail", b =>
                {
                    b.HasOne("DbCottonDollStore.Models.Order", "Order")
                        .WithMany("OrderDetail")
                        .HasForeignKey("OrderID")
                        .IsRequired()
                        .HasConstraintName("FK__OrderDeta__Order__2739D489");

                    b.HasOne("DbCottonDollStore.Models.Product", "Pro")
                        .WithMany("OrderDetail")
                        .HasForeignKey("ProID")
                        .IsRequired()
                        .HasConstraintName("FK__OrderDeta__ProID__17F790F9");

                    b.HasOne("DbCottonDollStore.Models.Store", "Store")
                        .WithMany("OrderDetail")
                        .HasForeignKey("StoreID")
                        .IsRequired()
                        .HasConstraintName("FK__OrderDeta__Store__19DFD96B");

                    b.HasOne("DbCottonDollStore.Models.ProductSpec", "Spec")
                        .WithMany("OrderDetail")
                        .HasForeignKey("ProSpecID", "ProID", "StoreID")
                        .IsRequired()
                        .HasConstraintName("FK__OrderDetail__1DB06A4F");

                    b.Navigation("Order");

                    b.Navigation("Pro");

                    b.Navigation("Spec");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("DbCottonDollStore.Models.Product", b =>
                {
                    b.HasOne("DbCottonDollStore.Models.Category", "Category")
                        .WithMany("ProductCategory")
                        .HasForeignKey("CategoryID")
                        .IsRequired()
                        .HasConstraintName("FK__Product__Categor__02084FDA");

                    b.HasOne("DbCottonDollStore.Models.Category", "CategoryID_2Navigation")
                        .WithMany("ProductCategoryID_2Navigation")
                        .HasForeignKey("CategoryID_2")
                        .HasConstraintName("FK__Product__Categor__02FC7413");

                    b.HasOne("DbCottonDollStore.Models.Category", "CategoryID_3Navigation")
                        .WithMany("ProductCategoryID_3Navigation")
                        .HasForeignKey("CategoryID_3")
                        .HasConstraintName("FK__Product__Categor__03F0984C");

                    b.HasOne("DbCottonDollStore.Models.Store", "Store")
                        .WithMany("Product")
                        .HasForeignKey("StoreID")
                        .HasConstraintName("FK__Product__StoreID__01142BA1");

                    b.Navigation("Category");

                    b.Navigation("CategoryID_2Navigation");

                    b.Navigation("CategoryID_3Navigation");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("DbCottonDollStore.Models.ProductSpec", b =>
                {
                    b.HasOne("DbCottonDollStore.Models.Product", "Pro")
                        .WithMany("ProductSpec")
                        .HasForeignKey("ProID")
                        .IsRequired()
                        .HasConstraintName("FK__ProductSp__ProID__398D8EEE");

                    b.HasOne("DbCottonDollStore.Models.Store", "Store")
                        .WithMany("ProductSpec")
                        .HasForeignKey("StoreID")
                        .IsRequired()
                        .HasConstraintName("FK__ProductSp__Store__571DF1D5");

                    b.Navigation("Pro");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("DbCottonDollStore.Models.Store", b =>
                {
                    b.HasOne("DbCottonDollStore.Models.User", "User")
                        .WithMany("Store")
                        .HasForeignKey("UserID")
                        .HasConstraintName("FK__Store__UserID__4AB81AF0");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DbCottonDollStore.Models.User", b =>
                {
                    b.HasOne("DbCottonDollStore.Models.Rank", "Rank")
                        .WithMany("User")
                        .HasForeignKey("RankID")
                        .HasConstraintName("FK__User__RankID__47DBAE45");

                    b.Navigation("Rank");
                });

            modelBuilder.Entity("DbCottonDollStore.Models.Category", b =>
                {
                    b.Navigation("InverseParentCategoryNavigation");

                    b.Navigation("ProductCategory");

                    b.Navigation("ProductCategoryID_2Navigation");

                    b.Navigation("ProductCategoryID_3Navigation");
                });

            modelBuilder.Entity("DbCottonDollStore.Models.Order", b =>
                {
                    b.Navigation("OrderDetail");
                });

            modelBuilder.Entity("DbCottonDollStore.Models.Product", b =>
                {
                    b.Navigation("OrderDetail");

                    b.Navigation("ProductSpec");
                });

            modelBuilder.Entity("DbCottonDollStore.Models.ProductSpec", b =>
                {
                    b.Navigation("OrderDetail");
                });

            modelBuilder.Entity("DbCottonDollStore.Models.Rank", b =>
                {
                    b.Navigation("User");
                });

            modelBuilder.Entity("DbCottonDollStore.Models.Store", b =>
                {
                    b.Navigation("Order");

                    b.Navigation("OrderDetail");

                    b.Navigation("Product");

                    b.Navigation("ProductSpec");
                });

            modelBuilder.Entity("DbCottonDollStore.Models.User", b =>
                {
                    b.Navigation("Order");

                    b.Navigation("Store");
                });
#pragma warning restore 612, 618
        }
    }
}
